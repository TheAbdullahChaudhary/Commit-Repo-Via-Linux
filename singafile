#include <iostream>
using namespace std;

class Shape {
public:
    virtual void displayArea() = 0;
};

class Circle : public Shape {
private:
    double radius;
public:
    Circle(double r) : radius(r) {}
    void displayArea() {
        double area = 3.14 * radius * radius;
        cout << "Circle Area: " << area << endl;
    }
};

class Rectangle : public Shape {
private:
    double length;
    double width;
public:
    Rectangle(double l, double w) : length(l), width(w) {}
    void displayArea() {
        double area = length * width;
        cout << "Rectangle Area: " << area << endl;
    }
};

class Square : public Shape {
private:
    double side;
public:
    Square(double s) : side(s) {}
    void displayArea() {
        double area = side * side;
        cout << "Square Area: " << area << endl;
    }
};

class Triangle : public Shape {
private:
    double base;
    double height;
public:
    Triangle(double b, double h) : base(b), height(h) {}
    void displayArea() {
        double area = 0.5 * base * height;
        cout << "Triangle Area: " << area << endl;
    }
};

int main() {
    Circle circle(5.0);
    Rectangle rectangle(4.0, 6.0);
    Square square(7.0);
    Triangle triangle(3.0, 8.0);

    Shape* shapes[] = {&circle, &rectangle, &square, &triangle};

    for (int i = 0; i < 4; i++) {
        shapes[i]->displayArea();
    }

    return 0;
}
#include <iostream>
using namespace std;

class Shape {
public:
    virtual void displayArea() = 0;
};

class Circle : public Shape {
private:
    double radius;
public:
    Circle(double r) : radius(r) {}
    void displayArea() {
        double area = 3.14 * radius * radius;
        cout << "Circle Area: " << area << endl;
    }
};

class Rectangle : public Shape {
private:
    double length;
    double width;
public:
    Rectangle(double l, double w) : length(l), width(w) {}
    void displayArea() {
        double area = length * width;
        cout << "Rectangle Area: " << area << endl;
    }
};

class Square : public Shape {
private:
    double side;
public:
    Square(double s) : side(s) {}
    void displayArea() {
        double area = side * side;
        cout << "Square Area: " << area << endl;
    }
};

class Triangle : public Shape {
private:
    double base;
    double height;
public:
    Triangle(double b, double h) : base(b), height(h) {}
    void displayArea() {
        double area = 0.5 * base * height;
        cout << "Triangle Area: " << area << endl;
    }
};

int main() {
    Circle circle(5.0);
    Rectangle rectangle(4.0, 6.0);
    Square square(7.0);
    Triangle triangle(3.0, 8.0);

    Shape* shapes[] = {&circle, &rectangle, &square, &triangle};

    for (int i = 0; i < 4; i++) {
        shapes[i]->displayArea();
    }

    return 0;
}
